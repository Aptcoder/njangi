// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum NjangiUserRole {
  member
  creator
}

enum InviteStatus {
  ignored
  pending
  accepted
}

model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  phoneNumber String
  firstName   String
  lastName    String
  password    String

  njangis NjangiUsers[]

  invites NjangiInvite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Njangi {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  maxUsers Int?
  amount   Int

  users NjangiUsers[]

  invites NjangiInvite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model NjangiUsers {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @db.ObjectId
  user     User   @relation(fields: [userId], references: [id])
  njangiId String @db.ObjectId
  njangi   Njangi @relation(fields: [njangiId], references: [id])

  role NjangiUserRole

  @@unique([userId, njangiId])
}

model NjangiInvite {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  njangiId String @db.ObjectId
  njangi   Njangi @relation(fields: [njangiId], references: [id])

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  status InviteStatus @default(pending)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
